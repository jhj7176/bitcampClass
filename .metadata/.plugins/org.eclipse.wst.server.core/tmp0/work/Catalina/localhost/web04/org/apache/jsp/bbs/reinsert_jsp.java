/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.104
 * Generated at: 2020-07-02 10:44:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bbs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class reinsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	request.setCharacterEncoding("EUC-KR");

	String url = "jdbc:oracle:thin:@localhost:1521:xe";
	String user = "scott";
	String password = "tiger";
	String driver = "oracle.jdbc.driver.OracleDriver";
	Class.forName(driver);
	Properties info = new Properties();
	info.setProperty("user", user);
	info.setProperty("password", password);
	Connection conn = null;
	Statement stmt = null;
	ResultSet rs = null;
//	String loc = new String(request.getParameter("loc").getBytes("ISO-8859-1"), "EUC-KR");
	String sub = new String(request.getParameter("sub").getBytes("ISO-8859-1"), "EUC-KR");
	String id = new String(request.getParameter("id").getBytes("ISO-8859-1"), "EUC-KR");
	String content = new String(request.getParameter("content").getBytes("ISO-8859-1"), "EUC-KR");

	int ref = Integer.parseInt(request.getParameter("ref"));
	System.out.println(ref);
	int no = Integer.parseInt(request.getParameter("no"));
	int lev = Integer.parseInt(request.getParameter("lev"));
	
			System.out.println("ref="+ref);
			System.out.println("no="+no);
			System.out.println("lev="+lev);
	if (sub.isEmpty())
		sub = "제목없음";
	if (id.isEmpty())
		id = "";
	sub = sub.replace("<", "&lt"); // 인젝션 공격 방지. 
	sub = sub.replace(">", "&gt");
	sub = sub.replace("--", "--");
	//sub=sub.replace(" ", "&nbsp;");
	sub = sub.replace("'", "｀");
	try {
		conn = DriverManager.getConnection(url, info);
		stmt = conn.createStatement();
		
		if (lev == 0) {
			String sql = "insert into bbs01 (num,sub,id,nalja,content,ref,no,lev) values (bbs01_seq.nextval,";
			sql += "'" + sub + "','" + id + "',sysdate,'" + content+ "'," + ref+ ",(select max(no)+1 from bbs01 where ref =" + ref+ ")," + (lev + 1) + ")";
			stmt.executeQuery(sql);

		} else {
//			String sql = "update bbs01 set no = no+1 where ref = "+ ref + "and no  >  "+no+1;
			String sql = "execute bbs_update("+ref+","+no+")";
						//update bbs01 set no = no+1 where ref = ref 		and no > (select 2+(select count(lev) from bbs01 where lev = (select max(lev) from bbs01)) from bbs01);
			stmt.executeQuery(sql);
			
			stmt = conn.createStatement();
			sql = "insert into bbs01 (num,sub,id,nalja,content,ref,no,lev) values (bbs01_seq.nextval,";
			sql += "'" + sub + "','" + id + "',sysdate,'" + content+ "'," + ref + "," + no + "+2, " + lev + "+1)";
			stmt.executeQuery(sql);
		}

	} catch (Exception e) {
		e.printStackTrace();
	} finally {
		if (stmt != null)
			stmt.close();
		if (conn != null)
			conn.close();
		response.sendRedirect("/web04/bbs/list.jsp");
	}
	
	

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
