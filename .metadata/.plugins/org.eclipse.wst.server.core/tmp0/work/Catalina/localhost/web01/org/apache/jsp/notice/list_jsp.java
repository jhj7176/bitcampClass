/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.104
 * Generated at: 2020-07-06 01:24:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.sql.DriverManager;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/notice/../template/header.jspf", Long.valueOf(1593998678621L));
    _jspx_dependants.put("/notice/../template/footer.jspf", Long.valueOf(1593998599946L));
    _jspx_dependants.put("/notice/../template/menu.jspf", Long.valueOf(1593998599931L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	int cardinality = 0; //전체 게시글 수 
int pageNum = 1;
if (request.getParameter("pageNum") != null) {
	pageNum = Integer.parseInt(request.getParameter("pageNum"));
}
int startNum = 1 + (pageNum - 1) * 20;
int endNum = 20 + (pageNum - 1) * 20;//페이지당 게시글 수
/*
1~20 1p					20+(pageNum-1)20
21~40 2p
41~60 3p

max(rn)  maxrn-20


*/

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"EUC-KR\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<style>\n");
      out.write("a {\n");
      out.write("\ttext-decoration: none;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t");

String user ="scott";
String pw ="tiger";
String driver = "oracle.jdbc.driver.OracleDriver";
String url = "jdbc:oracle:thin:@127.0.0.1:1521:xe";
java.util.Properties info = new java.util.Properties();
java.sql.Connection conn = null;
java.sql.Statement stmt = null;
java.sql.ResultSet rs = null;
info.setProperty("user", user);
info.setProperty("password", pw);
Class.forName(driver);

request.setCharacterEncoding("EUC-KR");

Object obj = session.getAttribute("name");
String login = null;
if(obj!=null) login = (String)obj;

      out.write("<table width=\"100%\">\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t");

	if(login==null){
	
	
      out.write("<tr>\n");
      out.write("\t\t\t<!-- login  -->\n");
      out.write("\t\t\t<td colspan=\"5\" style=\"text-align: right;\">\n");
      out.write("\t\t\t<a style=\"color:black; font-size:60%;\" href=\"\">로그인</a>\n");
      out.write("\t\t\t<a  style=\"color:black; font-size:60%;\"href=\"\">회원가입</a></td>\n");
      out.write("\t\t</tr>\n");

	}else{
		
      out.write("<tr>\n");
      out.write("\t\t\t<!-- login  -->\n");
      out.write("\t\t\t<td colspan=\"5\" style=\"text-align: right;\">\n");
      out.write("\t\t\t<a style=\"color:black; font-size:60%;\" href=\"\">");
      out.print(login);
      out.write("님 환영합니다.</a>\n");
      out.write("\t\t\t<a style=\"color:black; font-size:60%;\" href=\"\">로그아웃</a></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t\n");
      out.write("\t\t");
	
	}

      out.write("<tr>\n");
      out.write("\t\t\t<!-- logo -->\n");
      out.write("\t\t\t<td colspan=\"5\"><img src=\"/web01/img/logo.png\"></td>\n");
      out.write("\n");
      out.write("\t\t</tr>\n");
      out.write("    ");
      out.write("<tr align=\"center\">\n");
      out.write("\t\t\t<!-- menu -->\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\">&nbsp;</td>\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\" width=\"250\"><a style=\"color:white;\" href=\"/web01/index.jsp\">HOME</a></td>\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\" width=\"250\"><a style=\"color:white;\" href=\"/web01/notice/list.jsp\">NOTICE</a></td>\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\" width=\"250\"><a style=\"color:white;\" href=\"/web01/board/list.jsp\">FREE BOARD</a></td>\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\">&nbsp;</td>\n");
      out.write("\n");
      out.write("\t\t</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"5\">\n");
      out.write("\t\t\t<!-- contents start -->");
      out.write("<br>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<table align=\"center\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"4\">\n");
      out.write("\t\t\t\t<h1>공지사항</h1>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td colspan=\"4\"><a style=\"color: black;\" href=\"add.jsp\">글쓰기</a></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr align=\"center\">\n");
      out.write("\t\t\t<td bgcolor=\"#8c8cf5\" width=\"100\" style=\"color: white;\">글번호</td>\n");
      out.write("\t\t\t<td bgcolor=\"#8c8cf5\" width=\"400\" style=\"color: white;\">제목</td>\n");
      out.write("\t\t\t<td bgcolor=\"#8c8cf5\" width=\"150\" style=\"color: white;\">글쓴이</td>\n");
      out.write("\t\t\t<td bgcolor=\"#8c8cf5\" width=\"150\" style=\"color: white;\">날짜</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t");

			String key = request.getParameter("key"); //게시글 컬럼명 제목 or 글쓴이
		String word = request.getParameter("search"); //게시글 검색어
		if (key == null)
			key = "title";
		if (word == null)
			word = "";
		String sql = "select * from (select num,title, writer, wtime, ref, no, lev, etime, rownum as rwn from ";
		sql += "(select * from notice where " + key + " like '%" + word + "%')) ";
		sql += "where rwn between " + startNum + " and " + endNum + "order by ref desc, no";
		String sql2 = "select count(*) from notice where " + key + " like '%" + word + "%'"; //총 게시글 수
		SimpleDateFormat sdf1 = new SimpleDateFormat("hh:mm"); //오늘 게시글 시간
		SimpleDateFormat sdf2 = new SimpleDateFormat("yy-MM-dd");//오늘 아닌 게시글 날짜
		Date date = new Date();
		String today = sdf2.format(date); //오늘 날짜 yy-MM-dd, 게시글 날짜와 비교용. 
		String wtime = ""; //게시글 날짜
		try {
			conn = DriverManager.getConnection(url, info);
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql2);
			if (rs.next())
				cardinality = rs.getInt(1); //총 게시글 수, 튜플 수 
			System.out.println(cardinality);
			stmt.close();

			stmt = conn.createStatement();
			stmt.executeQuery(sql);
			rs = stmt.executeQuery(sql);
			while (rs.next()) {
				String replyTitleSpace = "";//답글 제목 앞 여백 
				int lev = rs.getInt("lev");
				for (int i = 0; i < lev; i++) {
			replyTitleSpace += "&nbsp;&nbsp;&nbsp;";
				}
				String re = replyTitleSpace + "[re]"; //여백+[답글마크]
				if (lev == 0)
			re = "";
		
      out.write("<tr><!-- 글번호 제목 글쓴이 날짜 -->\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<td align=\"center\">");
      out.print(rs.getString("num"));
      out.write("</td>\n");
      out.write("\t\t\t<!-- 글번호 -->\n");
      out.write("\t\t\t<td><a style=\"color: black;\"\n");
      out.write("\t\t\t\thref=\"detail.jsp?num=");
      out.print(rs.getInt(1));
      out.write("&writer=");
      out.print(rs.getString(3));
      out.write("\n");
      out.write("\t\t\t\t&ref=");
      out.print(rs.getString("ref"));
      out.write("&no=");
      out.print(rs.getString("no"));
      out.write("&lev=");
      out.print(rs.getString("lev"));
      out.write("\">\n");
      out.write("\t\t\t\t\t");
      out.print(re);
      out.print(rs.getString("title"));
      out.write("</a></td>\n");
      out.write("\t\t\t<!-- 제목 , 파라미터로 글번호,작성자,참조글번호, 글 순서 번호, 들여쓰기레벨 전달-->\n");
      out.write("\t\t\t<td align=\"center\">");
      out.print(rs.getString("writer"));
      out.write("</td>\n");
      out.write("\t\t\t<!-- 글쓴이 -->\n");
      out.write("\n");
      out.write("\t\t\t");

				if (sdf2.format(rs.getDate(4)).equals(today)) {
			
      out.write("<td align=\"center\">");
      out.print(sdf1.format(rs.getTimestamp("wtime")));
      out.write("</td>\n");
      out.write("\t\t\t<!-- 오늘날짜면 시간으로 표시 -->\n");
      out.write("\t\t\t");

				} else {
			
      out.write("<td align=\"center\">");
      out.print(sdf2.format(rs.getDate("wtime")));
      out.write("</td>\n");
      out.write("\t\t\t<!-- 오늘 이전이면 yy-MM-dd형식 -->\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");

			}
		} //while
		} catch (Exception e) {
		e.printStackTrace();
		} finally {
		if (stmt != null)
		stmt.close();
		if (conn != null)
		conn.close();
		}
		
      out.write("</table>\n");
      out.write("\t<!-- 게시판 끝 -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<table align=\"center\">\n");
      out.write("\t\t<!-- 페이지번호 -->\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>\n");
      out.write("\t\t\t\t");

					//1~19 나머지.

				int lang = 10; //한 페이지당 페이지 링크번호 수. 10개 
				int left = 0;
				if (cardinality % 20 != 0) //게시글 나누기 20의 나머지가 있는 경우 1페이지 추가
					left = 1;
				int totalPage = (cardinality - cardinality % 20) / 20 + left;
				System.out.println(totalPage);
				int start = 1 + ((pageNum - 1) / lang) * lang; //페이지 번호링크 시작
				int end = start + lang; //페이지 번호링크 끝
				if (end > totalPage)
					end = totalPage + 1;
				//pageNum
				/*
				page	start
				1-10		1			1+((pageNum-1)/10)*10
				11-20		11
				21-30		21

				*/
				if (start > lang) {//페이지 링크번호 누른게 10번 페이지보다 크면 prev링크 생성
				
      out.write("<a href=\"list.jsp?pageNum=");
      out.print(start - lang);
      out.write("\">[prev]</a> ");

 	}

 for (int i = start; i < end; i++) {
 
      out.write("<a href=\"list.jsp?pageNum=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(i);
      out.write("]\n");
      out.write("\t\t\t</a> ");

 	} //for
 if (end < totalPage) { //마지막 페이지번호링크가 전체페이지수보다 작을때만 next생성
 
      out.write("<a href=\"list.jsp?pageNum=");
      out.print(end);
      out.write("\">[next]</a> ");

 	} //if
 
      out.write("</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<br>\n");
      out.write("\t<form action=\"list.jsp\">\n");
      out.write("\t\t<table align=\"center\">\n");
      out.write("\t\t\t<!-- 게시글 검색 -->\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><select name=\"key\">\n");
      out.write("\t\t\t\t\t\t<!-- 컬럼명 -->\n");
      out.write("\t\t\t\t\t\t<option value=\"title\">제목</option>\n");
      out.write("\t\t\t\t\t\t<option value=\"writer\">글쓴이</option>\n");
      out.write("\t\t\t\t</select> <input type=\"text\" name=\"search\"><input type=\"submit\"\n");
      out.write("\t\t\t\t\tvalue=\"검색\"></td>\n");
      out.write("\t\t\t\t<!-- 검색어 입력 -->\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t</form>\n");
      out.write("\n");
      out.write("\t<br>\n");
      out.write("\t");
      out.write("<!-- contents end -->\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<!-- footer start-->\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\">&nbsp;</td>\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\" colspan=\"3\" align=\"center\" style=\"color:white;\">비트캠프 서울시 서초구 강남대로 459 (서초동,\n");
      out.write("\t\t\t\t백암빌딩)｜ 사업자등록번호 : 214-85-24928<br> (주)비트컴퓨터 서초본원 대표이사 : 조현정 / 문의\n");
      out.write("\t\t\t\t: 02-3486-9600 / 팩스 : 02-6007-1245<br> 통신판매업 신고번호 : 제 서초-00098호\n");
      out.write("\t\t\t\t/ 개인정보보호관리책임자 : 최종진<br> Copyright (c) 비트캠프 All rights reserved.<br>\n");
      out.write("\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td bgcolor = \"#6262d7\">&nbsp;</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<!-- footer end -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t</table>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
